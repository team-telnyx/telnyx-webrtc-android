plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
localProperties.load(new FileInputStream(rootProject.file("local.properties")))

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.telnyx.webrtc.sdk"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead()) {
            properties.load(project.rootProject.file("local.properties").newDataInputStream())
        } else {
            throw new GradleException("Could not read local.properties!")
        }

        release {
            buildConfigField 'String', "MOCK_USERNAME", properties.getProperty('MOCK_USERNAME', '"xxxxx"')
            buildConfigField 'String', "MOCK_PASSWORD", properties.getProperty('MOCK_PASSWORD', '"xxxxx"')

            resValue('string', "mock_username", properties.getProperty('MOCK_USERNAME', '"xxxxx"'))
            resValue('string', "mock_password", properties.getProperty('MOCK_PASSWORD', '"xxxxx"'))

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            jniDebuggable true
        }
        debug {
            buildConfigField 'String', "MOCK_USERNAME", properties.getProperty('MOCK_USERNAME', '"xxxxx"')
            buildConfigField 'String', "MOCK_PASSWORD", properties.getProperty('MOCK_PASSWORD', '"xxxxx"')

            resValue('string', "mock_username", properties.getProperty('MOCK_USERNAME', '"xxxxx"'))
            resValue('string', "mock_password", properties.getProperty('MOCK_PASSWORD', '"xxxxx"'))

            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude "META-INF/DEPENDENCIES"
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
        exclude "META-INF/LICENSE.md"
        exclude "META-INF/LICENSE-notice.md"
    }
}

dependencies {

    implementation deps.kotlin.stdlib
    implementation deps.androidx_core
    implementation deps.androidx_fragment
    implementation deps.appcompat
    implementation deps.material
    implementation deps.constraint_layout

    // SDK:
    implementation project(':telnyx_rtc')

    implementation deps.dialpad

    implementation deps.webrtc

    implementation deps.gson
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson

    implementation deps.coroutines.core
    implementation deps.coroutines.android

    implementation deps.websocket

    implementation deps.okhttp

    implementation deps.ktor.android
    implementation deps.ktor.cio
    implementation deps.ktor.gson
    implementation deps.ktor.websockets

    // Volley
    implementation deps.volley

    // Firebase
    implementation platform(deps.firebasebom)
    implementation deps.firebase_analytics
    implementation deps.firebase_messaging

    // Timber
    implementation deps.timber

    //permissions
    implementation deps.dexter

    implementation deps.hilt.android
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.firebase:firebase-inappmessaging-display:20.1.1'
    kapt deps.hilt.compiler

    //Testing:
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3'
    testImplementation('org.robolectric:robolectric:4.7.2') {
        exclude group: 'com.google.protobuf'
    }
    testImplementation "io.mockk:mockk:1.12.1"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.3"

    // jUnit 4
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.junit.vintage:junit-vintage-engine:5.7.0"
    testImplementation "androidx.test:core-ktx:1.3.0"

    // jUnit 5
    def jupiter_version = "5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"

    def kotest_version = "4.3.2"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    testImplementation "io.kotest:kotest-property-jvm:$kotest_version"
    androidTestImplementation "io.kotest:kotest-assertions-core-jvm:$kotest_version"
    androidTestImplementation "io.kotest:kotest-property-jvm:$kotest_version"

    testImplementation "org.slf4j:slf4j-nop:1.7.25"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"


    // Testing - Instrumentation
    testImplementation 'junit:junit:4.10'
    androidTestImplementation 'junit:junit:4.10'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:truth:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.work:work-testing:2.7.1'
    androidTestImplementation "io.mockk:mockk-android:1.10.4"
    debugImplementation 'androidx.fragment:fragment-testing:1.4.0'
    debugImplementation 'androidx.test:core-ktx:1.3.0'

    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'


    testImplementation "org.mockito:mockito-core:4.1.0"
    androidTestImplementation "org.mockito:mockito-android:3.8.0"

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}