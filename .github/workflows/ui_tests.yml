name: UI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:
      inputs:
        branch:
          description: 'Branch to run the workflow on'
          required: true
          default: 'main'

jobs:
  ui-tests:
    name: Run UI Tests on Firebase Test Lab
    runs-on: ubuntu-latest
    # Skip UI tests for draft PRs to reduce Firebase test quota usage
    if: github.event.pull_request.draft != true
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Create local.properties
        run: |
          echo "TEST_SIP_USERNAME=${{ secrets.TEST_SIP_USERNAME }}" >> local.properties
          echo "TEST_SIP_PASSWORD=${{ secrets.TEST_SIP_PASSWORD }}" >> local.properties
          echo "TEST_SIP_CALLER_NAME=${{ secrets.TEST_SIP_CALLER_NAME }}" >> local.properties
          echo "TEST_SIP_CALLER_NUMBER=${{ secrets.TEST_SIP_CALLER_NUMBER }}" >> local.properties
          echo "TEST_SIP_DEST_NUMBER=${{ secrets.TEST_SIP_DEST_NUMBER }}" >> local.properties

      - name: Build Debug APK and Test APK
        run: |
          ./gradlew :samples:xml_app:assembleDebug samples:xml_app:assembleDebugAndroidTest
          ./gradlew :samples:compose_app:assembleDebug samples:compose_app:assembleDebugAndroidTest

      - name: 'Authenticate Cloud SDK'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.TEST_UI_GCLOUD_SERVICE_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Run XML App Tests on Firebase Test Lab
        id: xml_tests
        continue-on-error: true
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app samples/xml_app/build/outputs/apk/debug/xml_app-debug.apk \
            --test samples/xml_app/build/outputs/apk/androidTest/debug/xml_app-debug-androidTest.apk \
            --device model=akita,version=34,locale=en,orientation=portrait \
            --timeout 30m
          echo "xml_status=success" >> $GITHUB_OUTPUT

      - name: Run Compose App Tests on Firebase Test Lab
        id: compose_tests
        continue-on-error: true
        run: |
          gcloud firebase test android run \
            --type instrumentation \
            --app samples/compose_app/build/outputs/apk/debug/compose_app-debug.apk \
            --test samples/compose_app/build/outputs/apk/androidTest/debug/compose_app-debug-androidTest.apk \
            --device model=akita,version=34,locale=en,orientation=portrait \
            --timeout 30m
          echo "compose_status=success" >> $GITHUB_OUTPUT

      # Reactive Circus fallback mechanism - runs only when both Firebase tests fail
      - name: Enable KVM group perms (Reactive Circus)
        if: always() && steps.xml_tests.outcome == 'failure' && steps.compose_tests.outcome == 'failure'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run XML App Tests with Reactive Circus (Fallback)
        id: xml_fallback_tests
        if: always() && steps.xml_tests.outcome == 'failure' && steps.compose_tests.outcome == 'failure'
        continue-on-error: true
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_6
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: |
            echo "Running XML app instrumentation tests as fallback..."
            ./gradlew :samples:xml_app:connectedDebugAndroidTest --stacktrace
        env:
          TEST_SIP_USERNAME: ${{ secrets.TEST_SIP_USERNAME }}
          TEST_SIP_PASSWORD: ${{ secrets.TEST_SIP_PASSWORD }}
          TEST_SIP_CALLER_NAME: ${{ secrets.TEST_SIP_CALLER_NAME }}
          TEST_SIP_CALLER_NUMBER: ${{ secrets.TEST_SIP_CALLER_NUMBER }}
          TEST_SIP_DEST_NUMBER: ${{ secrets.TEST_SIP_DEST_NUMBER }}

      - name: Run Compose App Tests with Reactive Circus (Fallback)
        id: compose_fallback_tests
        if: always() && steps.xml_tests.outcome == 'failure' && steps.compose_tests.outcome == 'failure'
        continue-on-error: true
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_6
          disable-animations: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: |
            echo "Running Compose app instrumentation tests as fallback..."
            ./gradlew :samples:compose_app:connectedDebugAndroidTest --stacktrace
        env:
          TEST_SIP_USERNAME: ${{ secrets.TEST_SIP_USERNAME }}
          TEST_SIP_PASSWORD: ${{ secrets.TEST_SIP_PASSWORD }}
          TEST_SIP_CALLER_NAME: ${{ secrets.TEST_SIP_CALLER_NAME }}
          TEST_SIP_CALLER_NUMBER: ${{ secrets.TEST_SIP_CALLER_NUMBER }}
          TEST_SIP_DEST_NUMBER: ${{ secrets.TEST_SIP_DEST_NUMBER }}

      - name: Check Test Results
        if: always()
        run: |
          # Check Firebase test results first
          if [[ "${{ steps.xml_tests.outcome }}" == "success" || "${{ steps.compose_tests.outcome }}" == "success" ]]; then
            echo "✅ At least one Firebase test suite passed"
            exit 0
          fi
          
          # If Firebase tests failed, check fallback results
          echo "⚠️ Both Firebase test suites failed, checking fallback results..."
          if [[ "${{ steps.xml_fallback_tests.outcome }}" == "success" || "${{ steps.compose_fallback_tests.outcome }}" == "success" ]]; then
            echo "✅ At least one Reactive Circus fallback test suite passed"
            exit 0
          fi
          
          # If both Firebase and fallback tests failed
          if [[ "${{ steps.xml_fallback_tests.outcome }}" == "failure" && "${{ steps.compose_fallback_tests.outcome }}" == "failure" ]]; then
            echo "❌ Both Firebase and Reactive Circus fallback test suites failed"
            exit 1
          fi
          
          # If fallback tests were skipped (Firebase tests passed)
          echo "❌ All test suites failed"
          exit 1